name: CI

on:
  push:
    branches: [main, develop]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Formatter Check (rustfmt)
        run: cargo fmt --all -- --check

      - name: Run Linter (Clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Security audit (Rust)
        run: cargo install cargo-audit && cargo audit

      - name: Run tests
        run: cargo test --all-features --workspace

      - name: Build release binary
        run: cargo build --release --locked --all-features

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.ref_type == 'tag' || github.ref_name == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/subgraph-mcp
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref_name == 'main' || github.ref_name == 'develop') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} # These are OCI labels, good!
          build-args: | # Add this
            BUILD_VERSION=${{ steps.meta.outputs.version }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          cache-from: type=gha
          cache-to: type=gha,mode=max
